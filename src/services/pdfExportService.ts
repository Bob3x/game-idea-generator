import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { GameIdea } from '../types/game';

export const exportGameIdeaToPDF = async (gameIdea: GameIdea): Promise<void> => {
  const pdf = new jsPDF('p', 'mm', 'a4');
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();
  const margin = 20;
  const contentWidth = pageWidth - 2 * margin;
  
  // Title
  pdf.setFontSize(24);
  pdf.setFont('helvetica', 'bold');
  pdf.text(gameIdea.title, margin, 30);
  
  // Subtitle
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`${gameIdea.genre} | ${gameIdea.platform.join(', ')} | ${gameIdea.complexity}`, margin, 40);
  
  let yPosition = 55;
  
  // Description
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Game Overview', margin, yPosition);
  yPosition += 10;
  
  pdf.setFontSize(11);
  pdf.setFont('helvetica', 'normal');
  const descriptionLines = pdf.splitTextToSize(gameIdea.description, contentWidth);
  pdf.text(descriptionLines, margin, yPosition);
  yPosition += descriptionLines.length * 5 + 10;
  
  // Core Gameplay
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Core Gameplay', margin, yPosition);
  yPosition += 10;
  
  pdf.setFontSize(11);
  pdf.setFont('helvetica', 'normal');
  const gameplayLines = pdf.splitTextToSize(gameIdea.coreGameplay, contentWidth);
  pdf.text(gameplayLines, margin, yPosition);
  yPosition += gameplayLines.length * 5 + 10;
  
  // Unique Features
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Unique Features', margin, yPosition);
  yPosition += 10;
  
  pdf.setFontSize(11);
  pdf.setFont('helvetica', 'normal');
  gameIdea.uniqueFeatures.forEach(feature => {
    const featureLines = pdf.splitTextToSize(`â€¢ ${feature}`, contentWidth - 5);
    pdf.text(featureLines, margin + 5, yPosition);
    yPosition += featureLines.length * 5 + 2;
  });
  
  yPosition += 10;
  
  // Development Details
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Development Details', margin, yPosition);
  yPosition += 10;
  
  pdf.setFontSize(11);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Target Audience: ${gameIdea.targetAudience}`, margin, yPosition);
  yPosition += 7;
  pdf.text(`Estimated Development Time: ${gameIdea.estimatedDevTime}`, margin, yPosition);
  yPosition += 7;
  
  if (gameIdea.monetization) {
    pdf.text(`Monetization: ${gameIdea.monetization}`, margin, yPosition);
    yPosition += 7;
  }
  
  if (gameIdea.artStyle) {
    pdf.text(`Art Style: ${gameIdea.artStyle}`, margin, yPosition);
    yPosition += 7;
  }
  
  // Footer
  pdf.setFontSize(8);
  pdf.setFont('helvetica', 'italic');
  pdf.text('Generated by GameSpark - AI Game Idea Generator', margin, pageHeight - 10);
  pdf.text(`Created on ${gameIdea.createdAt.toLocaleDateString()}`, pageWidth - margin - 50, pageHeight - 10);
  
  // Save the PDF
  pdf.save(`${gameIdea.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_game_idea.pdf`);
};